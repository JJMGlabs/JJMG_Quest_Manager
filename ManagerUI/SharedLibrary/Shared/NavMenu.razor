
<div class="sidebar-container">

        <div class="nav-item">
            <NavLink class="nav-link"  style="@NavMenuIconAlign" href="@Constants.Routes.QuestList" Match="NavLinkMatch.All">
                <span class="oi oi-script" aria-hidden="true"></span>
                @if (!NavMenuCollapsed)
                {
                    <nav-link class="nav-link-text">Manage Quests</nav-link>
                }
            </NavLink>
        </div>
        <div class="nav-item">
            <NavLink class="nav-link" style="@NavMenuIconAlign" href="@Constants.Routes.QuestLines" Match="NavLinkMatch.All">
                <span class="oi oi-list-rich" aria-hidden="true"></span>
                @if (!NavMenuCollapsed)
                {
                    <nav-link class="nav-link-text">QuestLines</nav-link>
                }
            </NavLink>
        </div>
        <div class="nav-item">
            <NavLink class="nav-link"  style="@NavMenuIconAlign" href="@Constants.Routes.Settings" Match="NavLinkMatch.All">
                <span class="oi oi-cog" aria-hidden="true"></span>
                @if (!NavMenuCollapsed)
                {
                    <nav-link class="nav-link-text">Settings</nav-link>
                }
            </NavLink>
        </div>
</div>
<div class=" navbar navbar-expand-lg bg-primary navbar-bottom">
    <button title="Navigation menu" class="btn nav-toggle" @onclick="ToggleNavMenu">
        @if (!NavMenuCollapsed)
        {
            <span class="oi oi-arrow-left"></span>
        }
        else
        {
            <span class="oi oi-arrow-right"></span>

        }
    </button>

</div>
@code {
    private bool NavMenuCollapsed { get; set; } = true;

    [Parameter]
    public EventCallback<bool> ShowIconMenu { get; set; }

    private string? NavMenuIconAlign => NavMenuCollapsed ? "justify-content: center;" : "padding-left: 10px";

    private async Task ToggleNavMenu()
    {
        NavMenuCollapsed = !NavMenuCollapsed;
        await ShowIconMenu.InvokeAsync(NavMenuCollapsed);
    }
}
